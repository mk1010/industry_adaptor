syntax = "proto3";
package nclink;

//import "google/protobuf/any.proto";

service NCLinkService{
  rpc NCLinkAuth(NCLinkAuthReq) returns (NCLinkAuthResp);
  rpc NCLinkSubscribe(NCLinkTopicSub) returns (stream NCLinkTopicMessage);
  rpc NCLinkSendData(NCLinkDataMessage) returns (NCLinkBaseResp);
  rpc NCLinkSendBasicData(NCLinkTopicMessage) returns (NCLinkBaseResp);
  rpc NCLinkGetMeta(NCLinkMetaDataReq) returns (NCLinkMetaDataResp);
}

message NCLinkTopicSub{
  string topic =1;
  string adaptor_id=2;
  repeated string tags =3;
}

message NCLinkTopicMessage{
  int32 message_kind =1;
  NCLinkPayloads payload =2;
}

message NCLinkAuthReq {
  string logic_id = 1;
  string password = 2;
}

message NCLinkAuthResp {
  NCLinkBaseResp base_resp =1;
}

message NCLinkBaseResp{
  uint32 status_code =1;
  string detail =2;
}

message NCLinkDataMessage{
  string data_id =1; //全局唯一 参考uuid
  string device_id =2;
  string component_id =3;
  string data_item_id =4;
  repeated NCLinkPayloads payloads =5;
}

message NCLinkPayloads{
  int64 unix_time_ms =1;//不附加时区
  bytes payload =2;
}

message NCLinkMetaDataReq{
  repeated string adaptor_id =1;
  repeated string device_id =2;
  repeated string component_id =3;
  repeated string data_item_id =4;
  repeated string sample_info_id =5;
}

message NCLinkMetaDataResp{
  repeated NCLinkAdaptor adaptors =1;
  repeated NCLinkDevice devices =2;
  repeated NCLinkComponent components =3;
  repeated NCLinkDataItem data_items =4;
  repeated NCLinkSampleInfo sample_infos =5;
  NCLinkBaseResp base_resp =6;
}

//元数据描述，由IDL定义进行参考
message NCLinkAdaptor{
  string adaptor_id =1;
  string name =2;
  string adaptor_type =3;
  string description =4;
  repeated string device_id =5;
  bytes config =6; //由用户自定义
}

message NCLinkDevice{
  string device_id =1;
  string name =2;
  string device_type =3;
  string description =4;
  string device_group =5;
  repeated string component_id =6;
  bytes config =7;
  repeated NCLinkDataItem data_item =8;
}

message NCLinkComponent{
  string component_id =1;
  string name =2;
  string component_type =3;
  string description =4;
  bytes config =5;
  repeated NCLinkDataInfo data_info=6;
}

message NCLinkDataInfo{
  NCLinkDataItem data_item=1;
  NCLinkSampleInfo sample_info=2;
}

message NCLinkDataItem{
  string data_item_id =1;
  string name =2;
  string data_item_type =3;
  string description =4;
  repeated  NCLinkDataItemMin items=5;
  map<string,string> data_unit =6;
}

message NCLinkDataItemMin{
  string filed_name=1;
  data_kind kind=2;
}

message NCLinkSampleInfo{
  string sample_info_id =1;
  string sample_info_type =2;
  int64 sampling_period =3;//单位毫秒 即每xx毫秒进行一次处理 如果设备为自主采样 无法设置该值会被忽略
  int64 upload_period=4;
}

enum data_kind{
  Invalid =0;
	Bool =1;
	Int8 =2;
	Int16 =3;
	Int32 =4;
	Int64 =5;
	Uint =6;
	Uint8 =7;
	Uint16 =8;
	Uint32 =9;
	Uint64 =10;
	Float32 =11;
	Float64 =12;
	Complex64 =13;
	Complex128 =14;
  String =15;
}

enum adaptor_message_kind{
  SetMeta =0;//payloads NCLinkMetaDataResp
  GetMeta =1;//payloads NCLinkMetaDataReq
}